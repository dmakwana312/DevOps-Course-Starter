- name: Install To-Do App on new web server
  hosts: nodes
  remote_user: ec2-user
  vars_prompt:

    - name: trello_api_key
      prompt: Enter Trello API Key

    - name: trello_api_token
      prompt: Enter Trello API Token

    - name: trello_board_id
      prompt: Enter Board ID

  tasks:
  - name: Install git and python3
    ansible.builtin.yum:
      name: 
        - git
        - python3
      state: present
    become: yes
  - name: Install poetry if it does not exist already
    ansible.builtin.shell: 
      cmd: curl -sSL https://install.python-poetry.org | python3 -
      creates: ~/.local/bin/poetry
  - name: Create /opt/todoapp folder
    ansible.builtin.file:
      path: /opt/todoapp
      state: directory
      owner: ec2-user
      group: ec2-user
    become: yes
  - name: Clone ToDo app code to folder (exercise-4 branch only)
    ansible.builtin.git:
      repo: https://github.com/dmakwana312/DevOps-Course-Starter.git
      dest: /opt/todoapp
      version: exercise-4
  - name: Change the working directory to /opt/todoapp and run install dependencies
    ansible.builtin.command: /home/ec2-user/.local/bin/poetry install 
    args:
      chdir: /opt/todoapp
  - name: Create .env file from .env.j2 template
    ansible.builtin.template:
      src: /home/ec2-user/.env.j2
      dest: /opt/todoapp/.env
      owner: ec2-user
      group: ec2-user
      mode: '0644'
  - name: Copy todoapp.service from Control Node to Managed Nodes
    ansible.builtin.copy:
      src: /home/ec2-user/todoapp.service
      dest: /etc/systemd/system/
      owner: root
      group: root
      mode: '744'
    become: yes
  - name: Start the webapp service
    ansible.builtin.systemd:
      name: todoapp
      state: restarted
      daemon_reload: true
    become: yes

      